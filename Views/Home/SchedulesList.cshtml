@{
    ViewData["Title"] = "Home Page";
    var apiKey = ViewData["GoogleApiKey"];
    const string dateFormat = "MMMM dd";
}

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    if (ViewBag.Schedules != null && ((IEnumerable<Schedule>)ViewBag.Schedules).Any())
    {
        <div class="schedule-container">
            @foreach (Schedule schedule in ViewBag.Schedules)
            {
                <div class="schedule-item" data-id="@schedule.ScheduleId">
                    <button class="delete-schedule-btn" title="Delete schedule">✕</button>
                    <div class="schedule-image">
                        @{
                            string mapUrl;
                            if (!string.IsNullOrWhiteSpace(schedule.HotelId) && !string.IsNullOrWhiteSpace(schedule.HotelName))
                            {
                                // Center on the hotel name and drop a marker there
                                var encodedName = Uri.EscapeDataString(schedule.HotelName);
                                mapUrl =
                                $"https://maps.googleapis.com/maps/api/staticmap?" +
                                $"center={encodedName}" +
                                $"&zoom=15" +
                                $"&size=300x200" +
                                $"&maptype=roadmap" +
                                $"&markers=label:Home%7C{encodedName}" +
                                $"&key={apiKey}";
                            }
                            else
                            {
                                // Fallback to city‐center
                                var center = string.IsNullOrWhiteSpace(schedule.CityName)
                                ? "0,0"
                                : Uri.EscapeDataString(schedule.CityName);
                                mapUrl =
                                $"https://maps.googleapis.com/maps/api/staticmap?" +
                                $"center={center}" +
                                $"&zoom=13" +
                                $"&size=300x200" +
                                $"&maptype=roadmap" +
                                $"&key={apiKey}";
                            }
                        }
                        <img src="@mapUrl"
                             alt="@(string.IsNullOrWhiteSpace(schedule.HotelName ?? schedule.CityName)
                                                                                              ? "No location selected"
                                                                                              : schedule.HotelName ?? schedule.CityName)" />
                                                                                                                                 </div>
                                                                                                                                 <div class="schedule-details">
                                                                                                                                     <h3>
                            @(string.IsNullOrWhiteSpace(schedule.CityName)
                                            ? ""
                                            : schedule.CityName)
            </h3>

                        @* Check if dates are missing or default *@
            @if (schedule.StartDate == default(DateTime) || schedule.EndDate == default(DateTime) || schedule.NrDays <= 0)
                        {
                            <a class="btn btn-warning"
                               asp-controller="Home"
                               asp-action="TimePeriod"
                               asp-route-scheduleId="@schedule.ScheduleId">
                                Select Period
                            </a>
                        }
                        else
                        {
                            <p>
                                <strong>Dates:</strong>
                                @schedule.StartDate?.ToString(dateFormat)
                                <span> to </span>
                                @schedule.EndDate?.ToString(dateFormat)
                            </p>
                            <p><strong>Number of days:</strong> @schedule.NrDays</p>

                            @if (!string.IsNullOrWhiteSpace(schedule.HotelName))
                            {
                                <p><strong>Residence:</strong> @schedule.HotelName</p>
                            }
                        }

                        @* Check if city is missing *@
                        @if (string.IsNullOrWhiteSpace(schedule.CityName))
                        {
                            <a class="btn btn-warning"
                               asp-controller="Home"
                               asp-action="City"
                               asp-route-scheduleId="@schedule.ScheduleId">
                                Select City
                            </a>
                        }

                        @* Only show View Schedule if city is present *@
                        @if (!string.IsNullOrWhiteSpace(schedule.CityName))
                        {
                            <a class="btn btn-primary"
                               asp-area=""
                               asp-controller="Home"
                               asp-action="ViewSchedule"
                               asp-route-id="@schedule.ScheduleId">
                                View Schedule
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center no-schedules-container">
            <h2 class="no-schedules-title">...currently you have no adventures planned, let's change that!</h2>
            <a class="btn btn-success btn-lg create-schedule-btn"
               asp-controller="Home"
               asp-action="TimePeriod">
                Create New Adventure
            </a>
        </div>
    }
}
else
{
    <div class="text-center">
        <h1 class="display-4">Welcome to Travel Agenda</h1>
        <p>Please login</p>
    </div>
}

<link rel="stylesheet" href="~/css/ScheduleList.css" />

@section Scripts {
    <script>
        document.querySelectorAll('.delete-schedule-btn').forEach(btn => {
            btn.addEventListener('click', async e => {
                e.stopPropagation();
                const item = btn.closest('.schedule-item');
                const id = item.dataset.id;
                try {
                    const res = await fetch(`/Home/DeleteSchedule?id=${id}`, { method: 'DELETE' });
                    if (!res.ok) throw new Error('Delete failed');
                    item.remove();

                    // Check if this was the last schedule and show the no-schedules message
                    const remainingSchedules = document.querySelectorAll('.schedule-item');
                    if (remainingSchedules.length === 0) {
                        const container = document.querySelector('.schedule-container');
                        if (container) {
                            container.innerHTML = `
                                <div class="text-center no-schedules-container">
                                    <h2 class="no-schedules-title">...currently you have no adventures planned, let's change that!</h2>
                                    <a class="btn btn-success btn-lg create-schedule-btn" href="/Home/TimePeriod">
                                        Create New Adventure
                                    </a>
                                </div>
                            `;
                        }
                    }
                } catch (err) {
                    console.error(err);
                    alert('Failed to delete schedule. Please try again.');
                }
            });
        });
    </script>
}