@{
    ViewData["Title"] = "Home Page";
    var apiKey = ViewData["GoogleApiKey"];
    var currentUser = await UserManager.GetUserAsync(User);
    var Schedule = ViewBag.Schedule;
}
<link rel="stylesheet" href="~/css/CalendarCity.css" />
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    @await Html.PartialAsync("_ProgressFlowChart")
    <br>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <!-- Container for inputs -->
    <div class="input-container">
        <div class="form-group">
            <input type="text" id="dateRange" class="form-control" placeholder="Select your vacation dates" />
        </div>
        <div class="form-group">
            <button id="submitButton" class="btn btn-primary" type="button">Submit</button>
        </div>
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-4">Welcome to Travel Agenda</h1>
        <p>Please login</p>
    </div>
}

<script>
    window.currentProgressStep = 'dates';

    // Initialize Flatpickr with range mode and allow single date
    flatpickr("#dateRange", {
        mode: "range",
        dateFormat: "Y-m-d",
        minDate: "today",
        allowInput: false,
        // when user clicks a single date and closes, it will remain as single
        onClose: function (selectedDates, dateStr, instance) {
            // if only one date selected, flatpickr will show just that date without the "to" text
            // no further action needed here
        }
    });

    document.getElementById("submitButton").addEventListener("click", () => {
        const raw = document.getElementById("dateRange").value;
        if (!raw) {
            alert("Please select at least a start date.");
            return;
        }

        // flatpickr uses " to " separator when two dates chosen
        const parts = raw.split(" to ");
        const startDate = parts[0];
        // if no second part, treat endDate = startDate
        const endDate = parts.length > 1 ? parts[1] : parts[0];

        fetch('/Home/SaveDates', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ startDate, endDate })
        })
        .then(response => response.json())
        .then(data => {
            if (data.scheduleId) {
                const scheduleId = data.scheduleId;
                window.location.href = `/Home/City?scheduleId=${scheduleId}`;
            } else {
                alert("Failed to save dates.");
            }
        })
        .catch(error => console.error('Error:', error));
    });
</script>